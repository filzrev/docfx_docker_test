name: Build docker image and run docfx
on:
  pull_request_target:
    branches: [ main, feature/*, hotfix/* ]
  push:
    branches: [ main, feature/*, hotfix/* ]

jobs:
  docfx_docker_test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    steps:
      # Enable multi-platform build
      - run: |
          docker buildx create --use --name multi-arch
          docker buildx ls
          docker buildx inspect --builder multi-arch --bootstrap

      # Checkout
      - uses: actions/checkout@v4

      # Install QEMU
      - run: docker run --privileged --rm tonistiigi/binfmt --install all

      # Build docker image
      - run: >-
          docker buildx build
          --platform linux/x64,linux/arm64
          --tag docfx:latest
          ./
    
      # Output docker image size
      - run:
          docker images

      # Run docfx command
      - run: >-
          docker run
          --name docfx:latest
          --rm
          --volume ${{ github.workspace }}:/opt/prj
          docfx docs/docfx.json
    
      # Upload site artifacts
      - uses: actions/upload-artifact@v4
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          name: site
          path: docs/_site/*
